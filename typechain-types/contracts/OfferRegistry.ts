/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export declare namespace OfferRegistry {
  export type OfferStruct = {
    offerer: string;
    offeree: string;
    scriptIpfsHash: string;
    maxOfferValue: BigNumberish;
  };

  export type OfferStructOutput = [string, string, string, BigNumber] & {
    offerer: string;
    offeree: string;
    scriptIpfsHash: string;
    maxOfferValue: BigNumber;
  };
}

export interface OfferRegistryInterface extends utils.Interface {
  functions: {
    "getMaxOfferValue(uint256)": FunctionFragment;
    "getOfferInfo(uint256)": FunctionFragment;
    "getOfferOfferee(uint256)": FunctionFragment;
    "getOfferOfferer(uint256)": FunctionFragment;
    "getOfferScriptIpfsHash(uint256)": FunctionFragment;
    "getRegistryLength()": FunctionFragment;
    "offers(uint256)": FunctionFragment;
    "owner()": FunctionFragment;
    "registerOffer(address,address,string,uint256)": FunctionFragment;
    "requesterContractHash()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getMaxOfferValue"
      | "getOfferInfo"
      | "getOfferOfferee"
      | "getOfferOfferer"
      | "getOfferScriptIpfsHash"
      | "getRegistryLength"
      | "offers"
      | "owner"
      | "registerOffer"
      | "requesterContractHash"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getMaxOfferValue",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOfferInfo",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOfferOfferee",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOfferOfferer",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOfferScriptIpfsHash",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRegistryLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "offers",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "registerOffer",
    values: [string, string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "requesterContractHash",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getMaxOfferValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOfferInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOfferOfferee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOfferOfferer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOfferScriptIpfsHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRegistryLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "offers", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "registerOffer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requesterContractHash",
    data: BytesLike
  ): Result;

  events: {};
}

export interface OfferRegistry extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: OfferRegistryInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getMaxOfferValue(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { maxOfferValue: BigNumber }>;

    getOfferInfo(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [OfferRegistry.OfferStructOutput] & {
        offer: OfferRegistry.OfferStructOutput;
      }
    >;

    getOfferOfferee(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { offeree: string }>;

    getOfferOfferer(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { offerer: string }>;

    getOfferScriptIpfsHash(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string] & { scriptIpfsHash: string }>;

    getRegistryLength(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { length: BigNumber }>;

    offers(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, BigNumber] & {
        offerer: string;
        offeree: string;
        scriptIpfsHash: string;
        maxOfferValue: BigNumber;
      }
    >;

    owner(overrides?: CallOverrides): Promise<[string]>;

    registerOffer(
      offerer: string,
      offeree: string,
      scriptIpfsHash: string,
      maxOfferValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    requesterContractHash(overrides?: CallOverrides): Promise<[string]>;
  };

  getMaxOfferValue(
    offerIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getOfferInfo(
    offerIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<OfferRegistry.OfferStructOutput>;

  getOfferOfferee(
    offerIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getOfferOfferer(
    offerIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getOfferScriptIpfsHash(
    offerIndex: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getRegistryLength(overrides?: CallOverrides): Promise<BigNumber>;

  offers(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string, string, string, BigNumber] & {
      offerer: string;
      offeree: string;
      scriptIpfsHash: string;
      maxOfferValue: BigNumber;
    }
  >;

  owner(overrides?: CallOverrides): Promise<string>;

  registerOffer(
    offerer: string,
    offeree: string,
    scriptIpfsHash: string,
    maxOfferValue: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  requesterContractHash(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    getMaxOfferValue(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOfferInfo(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<OfferRegistry.OfferStructOutput>;

    getOfferOfferee(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getOfferOfferer(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getOfferScriptIpfsHash(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getRegistryLength(overrides?: CallOverrides): Promise<BigNumber>;

    offers(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, BigNumber] & {
        offerer: string;
        offeree: string;
        scriptIpfsHash: string;
        maxOfferValue: BigNumber;
      }
    >;

    owner(overrides?: CallOverrides): Promise<string>;

    registerOffer(
      offerer: string,
      offeree: string,
      scriptIpfsHash: string,
      maxOfferValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    requesterContractHash(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    getMaxOfferValue(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOfferInfo(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOfferOfferee(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOfferOfferer(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOfferScriptIpfsHash(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getRegistryLength(overrides?: CallOverrides): Promise<BigNumber>;

    offers(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    registerOffer(
      offerer: string,
      offeree: string,
      scriptIpfsHash: string,
      maxOfferValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    requesterContractHash(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getMaxOfferValue(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOfferInfo(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOfferOfferee(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOfferOfferer(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOfferScriptIpfsHash(
      offerIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getRegistryLength(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    offers(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    registerOffer(
      offerer: string,
      offeree: string,
      scriptIpfsHash: string,
      maxOfferValue: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    requesterContractHash(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
