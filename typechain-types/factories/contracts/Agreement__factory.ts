/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Agreement, AgreementInterface } from "../../contracts/Agreement";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract LinkTokenInterface",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "contract IUniversalAdapter",
        name: "_universalAdapter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_agreementRegistry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_agreementId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_soulbound",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    name: "Filled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "agreementId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cancellations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_result",
        type: "bytes32",
      },
    ],
    name: "fulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "js",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priVars",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pubVars",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoverFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_vars",
        type: "string",
      },
      {
        internalType: "string",
        name: "_ref",
        type: "string",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "bytes32",
        name: "universalAdapterRequestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "soulbound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "uint256",
        name: "_state",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620019a9380380620019a98339810160408190526200003591620002e1565b600080546001600160a01b0319166001600160a01b03861690811782556040518692907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506001600160a01b0380891660805287811660a052861660c05260e0859052610100839052811515610120528051620000c09082016020908101908301620003a5565b60026000600360006006600060056000600460008a9190509080519060200190620000ed92919062000155565b5050885162000102919060208b019062000155565b5050875162000117919060208a019062000155565b505086516200012c9190602089019062000155565b50508551620001419190602088019062000155565b5050505050505050505050505050620004c2565b828054620001639062000486565b90600052602060002090601f016020900481019282620001875760008555620001d2565b82601f10620001a257805160ff1916838001178555620001d2565b82800160010185558215620001d2579182015b82811115620001d2578251825591602001919060010190620001b5565b50620001e0929150620001e4565b5090565b5b80821115620001e05760008155600101620001e5565b6001600160a01b03811681146200021157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023c57600080fd5b81516001600160401b038082111562000259576200025962000214565b604051601f8301601f19908116603f0116810190828211818310171562000284576200028462000214565b81604052838152602092508683858801011115620002a157600080fd5b600091505b83821015620002c55785820183015181830184015290820190620002a6565b83821115620002d75760008385830101525b9695505050505050565b600080600080600080600080610100898b031215620002ff57600080fd5b88516200030c81620001fb565b60208a01519098506200031f81620001fb565b60408a01519097506200033281620001fb565b60608a015160808b015191975095506200034c81620001fb565b60a08a015160c08b0151919550935080151581146200036a57600080fd5b60e08a01519092506001600160401b038111156200038757600080fd5b620003958b828c016200022a565b9150509295985092959890939650565b600080600080600060a08688031215620003be57600080fd5b85516001600160401b0380821115620003d657600080fd5b620003e489838a016200022a565b96506020880151915080821115620003fb57600080fd5b6200040989838a016200022a565b955060408801519150808211156200042057600080fd5b6200042e89838a016200022a565b945060608801519150808211156200044557600080fd5b6200045389838a016200022a565b935060808801519150808211156200046a57600080fd5b5062000479888289016200022a565b9150509295509295909350565b600181811c908216806200049b57607f821691505b602082108103620004bc57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161141362000596600039600060cf0152600081816101200152610d3e0152600081816101fb015281816102f4015281816107720152818161093701528181610dda0152610f0201526000818161031a015281816107ca0152818161098f01528181610e000152610f360152600081816104be01528181610547015261067501526000818161040601528181610491015281816106e6015281816107a00152818161084c0152818161096501528181610a7b0152610c4d01526114136000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c80630fad0f51146100ca57806313af40351461010657806329dcb0cf1461011b578063322000fa1461015057806334a8482714610163578063355c76ba146101865780635d64e3101461019b5780637b40d6b7146101ae5780638da5cb5b146101b6578063aa3ec0a9146101d6578063b79550be146101de578063c19d93fb146101e6578063cf6ad876146101ee578063e2739491146101f6578063edbf55f61461021d575b600080fd5b6100f17f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020015b60405180910390f35b610119610114366004611089565b610225565b005b6101427f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100fd565b61014261015e3660046110f5565b6102a3565b6100f1610171366004611089565b60076020526000908152604090205460ff1681565b61018e6105dc565b6040516100fd9190611160565b6101196101a93660046111b5565b61066a565b61018e610b96565b6000546101c9906001600160a01b031681565b6040516100fd91906111d7565b61018e610ba3565b610119610bb0565b610142610d30565b610119610d77565b6101427f000000000000000000000000000000000000000000000000000000000000000081565b61018e610fce565b6000546001600160a01b031633146102585760405162461bcd60e51b815260040161024f906111eb565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60006102ad610d30565b156102e55760405162461bcd60e51b8152602060048201526008602482015267494e41435449564560c01b604482015260640161024f565b6040516331a9108f60e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d9190611211565b6001600160a01b0316336001600160a01b0316146103bd5760405162461bcd60e51b815260040161024f906111eb565b6000600480546103cc9061122e565b905011156103e2576103e060048484610fdb565b505b6040516323b872dd60e01b81523360048201523060248201526064604482018190527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916323b872dd91016020604051808303816000875af1158015610455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104799190611268565b5060405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906104e9907f00000000000000000000000000000000000000000000000000000000000000009060649060040161128a565b6020604051808303816000875af1158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190611268565b5060405163d303e6a560e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d303e6a59061058f906305d64e3160e41b906002906003908c908c906004908101611342565b6020604051808303816000875af11580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d291906113c4565b9695505050505050565b600580546105e99061122e565b80601f01602080910402602001604051908101604052809291908181526020018280546106159061122e565b80156106625780601f1061063757610100808354040283529160200191610662565b820191906000526020600020905b81548152906001019060200180831161064557829003601f168201915b505050505081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106cb5760405162461bcd60e51b81526020600482015260066024820152654e4f545f554160d01b604482015260640161024f565b600180556040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319061071b9030906004016111d7565b602060405180830381865afa158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c91906113c4565b811115610928576040516331a9108f60e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169163a9059cbb917f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108359190611211565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906108819030906004016111d7565b602060405180830381865afa15801561089e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c291906113c4565b6040518363ffffffff1660e01b81526004016108df92919061128a565b6020604051808303816000875af11580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190611268565b50610b5f565b6040516331a9108f60e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169163a9059cbb917f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190611211565b6040516001600160e01b031960e084901b168152610a1d9190859060040161128a565b6020604051808303816000875af1158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a609190611268565b506000546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb9291169083906370a0823190610abc9030906004016111d7565b602060405180830381865afa158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd91906113c4565b6040518363ffffffff1660e01b8152600401610b1a92919061128a565b6020604051808303816000875af1158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190611268565b505b6040518181527fd14df08fabc3175c71c9c6b212bd0fd290d0e78a5f809c5f28deb5ba6f029b919060200160405180910390a15050565b600680546105e99061122e565b600380546105e99061122e565b6000546001600160a01b03163314610bf65760405162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015260640161024f565b610bfe610d30565b600003610c365760405162461bcd60e51b815260206004820152600660248201526541435449564560d01b604482015260640161024f565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90339083906370a0823190610c8c9030906004016111d7565b602060405180830381865afa158015610ca9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccd91906113c4565b6040518363ffffffff1660e01b8152600401610cea92919061128a565b6020604051808303816000875af1158015610d09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2d9190611268565b50565b6000600154600114610d70577f00000000000000000000000000000000000000000000000000000000000000004211610d6a575060015490565b50600390565b5060015490565b610d7f610d30565b15610db45760405162461bcd60e51b815260206004820152600560248201526412539050d560da1b604482015260640161024f565b60005433906001600160a01b031680821480610e8857506040516331a9108f60e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e739190611211565b6001600160a01b0316826001600160a01b0316145b610ebd5760405162461bcd60e51b815260040161024f90602080825260049082015263082aaa8960e31b604082015260600190565b6001600160a01b03808316600090815260076020526040808220805460ff191660011790559183168152205460ff168015610fbf57506040516331a9108f60e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526007906000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610f7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa19190611211565b6001600160a01b0316815260208101919091526040016000205460ff165b15610fca5760026001555b5050565b600280546105e99061122e565b828054610fe79061122e565b90600052602060002090601f016020900481019282611009576000855561104f565b82601f106110225782800160ff1982351617855561104f565b8280016001018555821561104f579182015b8281111561104f578235825591602001919060010190611034565b5061105b92915061105f565b5090565b5b8082111561105b5760008155600101611060565b6001600160a01b0381168114610d2d57600080fd5b60006020828403121561109b57600080fd5b81356110a681611074565b9392505050565b60008083601f8401126110bf57600080fd5b5081356001600160401b038111156110d657600080fd5b6020830191508360208285010111156110ee57600080fd5b9250929050565b6000806000806040858703121561110b57600080fd5b84356001600160401b038082111561112257600080fd5b61112e888389016110ad565b9096509450602087013591508082111561114757600080fd5b50611154878288016110ad565b95989497509550505050565b600060208083528351808285015260005b8181101561118d57858101830151858201604001528201611171565b8181111561119f576000604083870101525b50601f01601f1916929092016040019392505050565b600080604083850312156111c857600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b60006020828403121561122357600080fd5b81516110a681611074565b600181811c9082168061124257607f821691505b60208210810361126257634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561127a57600080fd5b815180151581146110a657600080fd5b6001600160a01b03929092168252602082015260400190565b8054600090600181811c90808316806112bd57607f831692505b602080841082036112de57634e487b7160e01b600052602260045260246000fd5b838852602088018280156112f9576001811461130a57611335565b60ff19871682528282019750611335565b60008981526020902060005b8781101561132f57815484820152908601908401611316565b83019850505b5050505050505092915050565b63ffffffff60e01b8716815260a06020820152600061136460a08301886112a3565b828103604084015261137681886112a3565b9050828103606084015284815284866020830137600060208683010152601f19601f8601168101905060208382030160808401526113b760208201856112a3565b9998505050505050505050565b6000602082840312156113d657600080fd5b505191905056fea264697066735822122061579385e8fbf5d21497f7a2404394dd9097b4b4a8f0e1c08452f809ab0177e064736f6c634300080e0033";

type AgreementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgreementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Agreement__factory extends ContractFactory {
  constructor(...args: AgreementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _linkToken: string,
    _universalAdapter: string,
    _agreementRegistry: string,
    _agreementId: BigNumberish,
    _creator: string,
    _deadline: BigNumberish,
    _soulbound: boolean,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Agreement> {
    return super.deploy(
      _linkToken,
      _universalAdapter,
      _agreementRegistry,
      _agreementId,
      _creator,
      _deadline,
      _soulbound,
      data,
      overrides || {}
    ) as Promise<Agreement>;
  }
  override getDeployTransaction(
    _linkToken: string,
    _universalAdapter: string,
    _agreementRegistry: string,
    _agreementId: BigNumberish,
    _creator: string,
    _deadline: BigNumberish,
    _soulbound: boolean,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _linkToken,
      _universalAdapter,
      _agreementRegistry,
      _agreementId,
      _creator,
      _deadline,
      _soulbound,
      data,
      overrides || {}
    );
  }
  override attach(address: string): Agreement {
    return super.attach(address) as Agreement;
  }
  override connect(signer: Signer): Agreement__factory {
    return super.connect(signer) as Agreement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgreementInterface {
    return new utils.Interface(_abi) as AgreementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Agreement {
    return new Contract(address, _abi, signerOrProvider) as Agreement;
  }
}
