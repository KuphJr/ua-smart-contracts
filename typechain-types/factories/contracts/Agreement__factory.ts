/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Agreement, AgreementInterface } from "../../contracts/Agreement";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract LinkTokenInterface",
        name: "_linkToken",
        type: "address",
      },
      {
        internalType: "contract IUniversalAdapter",
        name: "_universalAdapter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_agreementRegistry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_agreementId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_soulbound",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    name: "Filled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "agreementId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cid",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_result",
        type: "bytes32",
      },
    ],
    name: "fulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "js",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onTokenTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priVars",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pubVars",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoverFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "soulbound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "uint256",
        name: "_state",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162001b4f38038062001b4f8339810160408190526200003591620002e1565b600080546001600160a01b0319166001600160a01b03861690811782556040518692907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506001600160a01b0380891660805287811660a052861660c05260e0859052610100839052811515610120528051620000c09082016020908101908301620003a5565b60026000600360006006600060056000600460008a9190509080519060200190620000ed92919062000155565b5050885162000102919060208b019062000155565b5050875162000117919060208a019062000155565b505086516200012c9190602089019062000155565b50508551620001419190602088019062000155565b5050505050505050505050505050620004c2565b828054620001639062000486565b90600052602060002090601f016020900481019282620001875760008555620001d2565b82601f10620001a257805160ff1916838001178555620001d2565b82800160010185558215620001d2579182015b82811115620001d2578251825591602001919060010190620001b5565b50620001e0929150620001e4565b5090565b5b80821115620001e05760008155600101620001e5565b6001600160a01b03811681146200021157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023c57600080fd5b81516001600160401b038082111562000259576200025962000214565b604051601f8301601f19908116603f0116810190828211818310171562000284576200028462000214565b81604052838152602092508683858801011115620002a157600080fd5b600091505b83821015620002c55785820183015181830184015290820190620002a6565b83821115620002d75760008385830101525b9695505050505050565b600080600080600080600080610100898b031215620002ff57600080fd5b88516200030c81620001fb565b60208a01519098506200031f81620001fb565b60408a01519097506200033281620001fb565b60608a015160808b015191975095506200034c81620001fb565b60a08a015160c08b0151919550935080151581146200036a57600080fd5b60e08a01519092506001600160401b038111156200038757600080fd5b620003958b828c016200022a565b9150509295985092959890939650565b600080600080600060a08688031215620003be57600080fd5b85516001600160401b0380821115620003d657600080fd5b620003e489838a016200022a565b96506020880151915080821115620003fb57600080fd5b6200040989838a016200022a565b955060408801519150808211156200042057600080fd5b6200042e89838a016200022a565b945060608801519150808211156200044557600080fd5b6200045389838a016200022a565b935060808801519150808211156200046a57600080fd5b5062000479888289016200022a565b9150509295509295909350565b600181811c908216806200049b57607f821691505b602082108103620004bc57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051610120516115b962000596600039600060c40152600081816101150152610e4c0152600081816101cd01528181610426015281816105eb015281816109310152610eb901526000818161047e01528181610643015281816109570152610edf01526000818161032901528181610b660152610c1d01526000818161039a0152818161045401528181610500015281816106190152818161072f0152818161088701528181610aa701528181610b3901528181610d5b0152610fa101526115b96000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c80630fad0f51146100bf57806313af4035146100fb57806329dcb0cf14610110578063355c76ba146101455780635d64e3101461015a5780637b40d6b71461016d5780638da5cb5b14610175578063a4c0ed3614610195578063aa3ec0a9146101a8578063b79550be146101b0578063c19d93fb146101b8578063cf6ad876146101c0578063e2739491146101c8578063edbf55f6146101ef575b600080fd5b6100e67f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020015b60405180910390f35b61010e610109366004611142565b6101f7565b005b6101377f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100f2565b61014d610290565b6040516100f291906111b3565b61010e6101683660046111c6565b61031e565b61014d61084a565b600054610188906001600160a01b031681565b6040516100f291906111e8565b61010e6101a33660046111fc565b610857565b61014d610caf565b61010e610cbc565b610137610e3e565b61010e610e85565b6101377f000000000000000000000000000000000000000000000000000000000000000081565b61014d610fe2565b6000546001600160a01b031633146102455760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6005805461029d90611284565b80601f01602080910402602001604051908101604052809291908181526020018280546102c990611284565b80156103165780601f106102eb57610100808354040283529160200191610316565b820191906000526020600020905b8154815290600101906020018083116102f957829003601f168201915b505050505081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461037f5760405162461bcd60e51b81526020600482015260066024820152654e4f545f554160d01b604482015260640161023c565b600180556040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906103cf9030906004016111e8565b602060405180830381865afa1580156103ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041091906112be565b8111156105dc576040516331a9108f60e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169163a9059cbb917f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa1580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e991906112d7565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906105359030906004016111e8565b602060405180830381865afa158015610552573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057691906112be565b6040518363ffffffff1660e01b81526004016105939291906112f4565b6020604051808303816000875af11580156105b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d6919061130d565b50610813565b6040516331a9108f60e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169163a9059cbb917f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa15801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ae91906112d7565b6040516001600160e01b031960e084901b1681526106d1919085906004016112f4565b6020604051808303816000875af11580156106f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610714919061130d565b506000546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb9291169083906370a08231906107709030906004016111e8565b602060405180830381865afa15801561078d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b191906112be565b6040518363ffffffff1660e01b81526004016107ce9291906112f4565b6020604051808303816000875af11580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610811919061130d565b505b6040518181527fd14df08fabc3175c71c9c6b212bd0fd290d0e78a5f809c5f28deb5ba6f029b919060200160405180910390a15050565b6006805461029d90611284565b61085f610e3e565b1561087c5760405162461bcd60e51b815260040161023c9061132f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108df5760405162461bcd60e51b81526020600482015260086024820152674e4f545f4c494e4b60c01b604482015260640161023c565b606483146109225760405162461bcd60e51b815260206004820152601060248201526f125390d3d4949150d517d05353d5539560821b604482015260640161023c565b6040516331a9108f60e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca91906112d7565b6001600160a01b0316846001600160a01b0316146109fa5760405162461bcd60e51b815260040161023c90611351565b610a2c60405180604001604052806011815260200170676f74207468727520726571756972657360781b815250610fef565b606080610a3b83850185611419565b8051919350915015610a5c578051610a5a906004906020840190611094565b505b610a8c6040518060400160405280600f81526020016e676f742074687275206465636f646560881b815250610fef565b6040516370a0823160e01b8152610b22906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610adc9030906004016111e8565b602060405180830381865afa158015610af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1d91906112be565b611032565b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390610b91907f0000000000000000000000000000000000000000000000000000000000000000906064906004016112f4565b6020604051808303816000875af1158015610bb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd4919061130d565b50610c066040518060400160405280601081526020016f676f74207468727520617070726f766560801b815250610fef565b60405163d303e6a560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063d303e6a590610c63906305d64e3160e41b906002906003908890600490810161151b565b6020604051808303816000875af1158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca691906112be565b50505050505050565b6003805461029d90611284565b6000546001600160a01b03163314610d045760405162461bcd60e51b815260206004820152600b60248201526a2727aa2fa1a922a0aa27a960a91b604482015260640161023c565b610d0c610e3e565b600003610d445760405162461bcd60e51b815260206004820152600660248201526541435449564560d01b604482015260640161023c565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90339083906370a0823190610d9a9030906004016111e8565b602060405180830381865afa158015610db7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddb91906112be565b6040518363ffffffff1660e01b8152600401610df89291906112f4565b6020604051808303816000875af1158015610e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3b919061130d565b50565b6000600154600114610e7e577f00000000000000000000000000000000000000000000000000000000000000004211610e78575060015490565b50600390565b5060015490565b610e8d610e3e565b15610eaa5760405162461bcd60e51b815260040161023c9061132f565b6040516331a9108f60e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610f2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5291906112d7565b6001600160a01b0316336001600160a01b031614610f825760405162461bcd60e51b815260040161023c90611351565b60026001556000546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263a9059cbb9291169083906370a0823190610d9a9030906004016111e8565b6002805461029d90611284565b610e3b8160405160240161100391906111b3565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611073565b610e3b8160405160240161104891815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b8280546110a090611284565b90600052602060002090601f0160209004810192826110c25760008555611108565b82601f106110db57805160ff1916838001178555611108565b82800160010185558215611108579182015b828111156111085782518255916020019190600101906110ed565b50611114929150611118565b5090565b5b808211156111145760008155600101611119565b6001600160a01b0381168114610e3b57600080fd5b60006020828403121561115457600080fd5b813561115f8161112d565b9392505050565b6000815180845260005b8181101561118c57602081850181015186830182015201611170565b8181111561119e576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061115f6020830184611166565b600080604083850312156111d957600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6000806000806060858703121561121257600080fd5b843561121d8161112d565b93506020850135925060408501356001600160401b038082111561124057600080fd5b818701915087601f83011261125457600080fd5b81358181111561126357600080fd5b88602082850101111561127557600080fd5b95989497505060200194505050565b600181811c9082168061129857607f821691505b6020821081036112b857634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156112d057600080fd5b5051919050565b6000602082840312156112e957600080fd5b815161115f8161112d565b6001600160a01b03929092168252602082015260400190565b60006020828403121561131f57600080fd5b8151801515811461115f57600080fd5b602080825260089082015267494e41435449564560c01b604082015260600190565b6020808252600c908201526b2727aa2fa922a222a2a6a2a960a11b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261139e57600080fd5b81356001600160401b03808211156113b8576113b8611377565b604051601f8301601f19908116603f011681019082821181831017156113e0576113e0611377565b816040528381528660208588010111156113f957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561142c57600080fd5b82356001600160401b038082111561144357600080fd5b61144f8683870161138d565b9350602085013591508082111561146557600080fd5b506114728582860161138d565b9150509250929050565b8054600090600181811c908083168061149657607f831692505b602080841082036114b757634e487b7160e01b600052602260045260246000fd5b838852602088018280156114d257600181146114e35761150e565b60ff1987168252828201975061150e565b60008981526020902060005b87811015611508578154848201529086019084016114ef565b83019850505b5050505050505092915050565b63ffffffff60e01b8616815260a06020820152600061153d60a083018761147c565b828103604084015261154f818761147c565b905082810360608401526115638186611166565b90508281036080840152611577818561147c565b9897505050505050505056fea264697066735822122079d33c00432af3fd8b4499a3b066127b036dbb17d00091c61a19a0ae1df1011864736f6c634300080e0033";

type AgreementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgreementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Agreement__factory extends ContractFactory {
  constructor(...args: AgreementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _linkToken: string,
    _universalAdapter: string,
    _agreementRegistry: string,
    _agreementId: BigNumberish,
    _creator: string,
    _deadline: BigNumberish,
    _soulbound: boolean,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Agreement> {
    return super.deploy(
      _linkToken,
      _universalAdapter,
      _agreementRegistry,
      _agreementId,
      _creator,
      _deadline,
      _soulbound,
      data,
      overrides || {}
    ) as Promise<Agreement>;
  }
  override getDeployTransaction(
    _linkToken: string,
    _universalAdapter: string,
    _agreementRegistry: string,
    _agreementId: BigNumberish,
    _creator: string,
    _deadline: BigNumberish,
    _soulbound: boolean,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _linkToken,
      _universalAdapter,
      _agreementRegistry,
      _agreementId,
      _creator,
      _deadline,
      _soulbound,
      data,
      overrides || {}
    );
  }
  override attach(address: string): Agreement {
    return super.attach(address) as Agreement;
  }
  override connect(signer: Signer): Agreement__factory {
    return super.connect(signer) as Agreement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgreementInterface {
    return new utils.Interface(_abi) as AgreementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Agreement {
    return new Contract(address, _abi, signerOrProvider) as Agreement;
  }
}
