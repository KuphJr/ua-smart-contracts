/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OfferRegistry,
  OfferRegistryInterface,
} from "../../contracts/OfferRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requesterContractHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offerIndex",
        type: "uint256",
      },
    ],
    name: "getMaxOfferValue",
    outputs: [
      {
        internalType: "uint256",
        name: "maxOfferValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offerIndex",
        type: "uint256",
      },
    ],
    name: "getOfferInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            internalType: "address",
            name: "offeree",
            type: "address",
          },
          {
            internalType: "string",
            name: "scriptIpfsHash",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "maxOfferValue",
            type: "uint256",
          },
        ],
        internalType: "struct OfferRegistry.Offer",
        name: "offer",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offerIndex",
        type: "uint256",
      },
    ],
    name: "getOfferOfferee",
    outputs: [
      {
        internalType: "address",
        name: "offeree",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offerIndex",
        type: "uint256",
      },
    ],
    name: "getOfferOfferer",
    outputs: [
      {
        internalType: "address",
        name: "offerer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offerIndex",
        type: "uint256",
      },
    ],
    name: "getOfferScriptIpfsHash",
    outputs: [
      {
        internalType: "string",
        name: "scriptIpfsHash",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegistryLength",
    outputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "offers",
    outputs: [
      {
        internalType: "address",
        name: "offerer",
        type: "address",
      },
      {
        internalType: "address",
        name: "offeree",
        type: "address",
      },
      {
        internalType: "string",
        name: "scriptIpfsHash",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxOfferValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "offerer",
        type: "address",
      },
      {
        internalType: "address",
        name: "offeree",
        type: "address",
      },
      {
        internalType: "string",
        name: "scriptIpfsHash",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxOfferValue",
        type: "uint256",
      },
    ],
    name: "registerOffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requesterContractHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ecd380380610ecd83398181016040528101906100329190610095565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550506100df565b60008151905061008f816100c8565b92915050565b6000602082840312156100a757600080fd5b60006100b584828501610080565b91505092915050565b6000819050919050565b6100d1816100be565b81146100dc57600080fd5b50565b610ddf806100ee6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80636f80a048116100665780636f80a0481461016d5780638a72ea6a1461019d5780638da5cb5b146101d0578063a6ece002146101ee578063db3cadc81461020c5761009e565b80631b58f66b146100a35780632273ae52146100c15780632a1da982146100dd5780635c7753081461010d57806360d74f7e1461013d575b600080fd5b6100ab61023c565b6040516100b89190610c2a565b60405180910390f35b6100db60048036038101906100d691906109ba565b610242565b005b6100f760048036038101906100f29190610a3a565b61040c565b6040516101049190610c87565b60405180910390f35b61012760048036038101906101229190610a3a565b610599565b6040516101349190610c45565b60405180910390f35b61015760048036038101906101529190610a3a565b610659565b6040516101649190610bc3565b60405180910390f35b61018760048036038101906101829190610a3a565b6106a0565b6040516101949190610bc3565b60405180910390f35b6101b760048036038101906101b29190610a3a565b6106e7565b6040516101c79493929190610bde565b60405180910390f35b6101d86107fc565b6040516101e59190610bc3565b60405180910390f35b6101f6610822565b6040516102039190610ca9565b60405180910390f35b61022660048036038101906102219190610a3a565b61082e565b6040516102339190610ca9565b60405180910390f35b60025481565b600080339050803f91506002548214610290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028790610c67565b60405180910390fd5b600060405180608001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906103f6929190610855565b5060608201518160030155505050505050505050565b6104146108d5565b6000828154811061042157fe5b90600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561057f5780601f106105545761010080835404028352916020019161057f565b820191906000526020600020905b81548152906001019060200180831161056257829003601f168201915b505050505081526020016003820154815250509050919050565b6060600082815481106105a857fe5b90600052602060002090600402016002018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561064d5780601f106106225761010080835404028352916020019161064d565b820191906000526020600020905b81548152906001019060200180831161063057829003601f168201915b50505050509050919050565b600080828154811061066757fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008082815481106106ae57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600081815481106106f457fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ec5780601f106107c1576101008083540402835291602001916107ec565b820191906000526020600020905b8154815290600101906020018083116107cf57829003601f168201915b5050505050908060030154905084565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008080549050905090565b600080828154811061083c57fe5b9060005260206000209060040201600301549050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061089657805160ff19168380011785556108c4565b828001600101855582156108c4579182015b828111156108c35782518255916020019190600101906108a8565b5b5090506108d19190610929565b5090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081525090565b5b8082111561094257600081600090555060010161092a565b5090565b60008135905061095581610d7b565b92915050565b60008083601f84011261096d57600080fd5b8235905067ffffffffffffffff81111561098657600080fd5b60208301915083600182028301111561099e57600080fd5b9250929050565b6000813590506109b481610d92565b92915050565b6000806000806000608086880312156109d257600080fd5b60006109e088828901610946565b95505060206109f188828901610946565b945050604086013567ffffffffffffffff811115610a0e57600080fd5b610a1a8882890161095b565b93509350506060610a2d888289016109a5565b9150509295509295909350565b600060208284031215610a4c57600080fd5b6000610a5a848285016109a5565b91505092915050565b610a6c81610cf1565b82525050565b610a7b81610cf1565b82525050565b610a8a81610d03565b82525050565b6000610a9b82610cc4565b610aa58185610ccf565b9350610ab5818560208601610d37565b610abe81610d6a565b840191505092915050565b6000610ad482610cc4565b610ade8185610ce0565b9350610aee818560208601610d37565b610af781610d6a565b840191505092915050565b6000610b0f601583610ce0565b91507f496e76616c696420636f6e7472616374206861736800000000000000000000006000830152602082019050919050565b6000608083016000830151610b5a6000860182610a63565b506020830151610b6d6020860182610a63565b5060408301518482036040860152610b858282610a90565b9150506060830151610b9a6060860182610ba5565b508091505092915050565b610bae81610d2d565b82525050565b610bbd81610d2d565b82525050565b6000602082019050610bd86000830184610a72565b92915050565b6000608082019050610bf36000830187610a72565b610c006020830186610a72565b8181036040830152610c128185610ac9565b9050610c216060830184610bb4565b95945050505050565b6000602082019050610c3f6000830184610a81565b92915050565b60006020820190508181036000830152610c5f8184610ac9565b905092915050565b60006020820190508181036000830152610c8081610b02565b9050919050565b60006020820190508181036000830152610ca18184610b42565b905092915050565b6000602082019050610cbe6000830184610bb4565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610cfc82610d0d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610d55578082015181840152602081019050610d3a565b83811115610d64576000848401525b50505050565b6000601f19601f8301169050919050565b610d8481610cf1565b8114610d8f57600080fd5b50565b610d9b81610d2d565b8114610da657600080fd5b5056fea2646970667358221220a9736ade4d76e8c87ac620f8c688e4facab7ff864b4fffb7099bae5a0a7a9fc464736f6c63430007000033";

type OfferRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OfferRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OfferRegistry__factory extends ContractFactory {
  constructor(...args: OfferRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _requesterContractHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OfferRegistry> {
    return super.deploy(
      _requesterContractHash,
      overrides || {}
    ) as Promise<OfferRegistry>;
  }
  override getDeployTransaction(
    _requesterContractHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_requesterContractHash, overrides || {});
  }
  override attach(address: string): OfferRegistry {
    return super.attach(address) as OfferRegistry;
  }
  override connect(signer: Signer): OfferRegistry__factory {
    return super.connect(signer) as OfferRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OfferRegistryInterface {
    return new utils.Interface(_abi) as OfferRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OfferRegistry {
    return new Contract(address, _abi, signerOrProvider) as OfferRegistry;
  }
}
